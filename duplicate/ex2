#include <iostream>
#include <vector>
#include <unordered_set>

template<typename T>
std::vector<T> removeDuplicatesPreserveOrder(const std::vector<T>& arr) {
    std::vector<T> result;
    std::unordered_set<T> seen;

    for (const auto& item : arr) {
        if (seen.insert(item).second) {
            result.push_back(item);
        }
    }

    return result;
}

int main() {
    std::vector<int> arr1 = {1, 5, 5, 2, 1, 3, 2, 1, 3};
    std::vector<std::string> arr2 = {"Apple", "Banana", "Banana", "Johan", "Melon", "Apple1"};

    arr1 = removeDuplicatesPreserveOrder(arr1);
    arr2 = removeDuplicatesPreserveOrder(arr2);

    // Print the result
    std::cout << "Result for arr1: ";
    for (const auto& item : arr1) {
        std::cout << item << " ";
    }
    std::cout << std::endl;

    std::cout << "Result for arr2: ";
    for (const auto& item : arr2) {
        std::cout << item << " ";
    }
    std::cout << std::endl;

    return 0;
}
